name: PR Build

defaults:
  run:
    shell: bash

on:
  pull_request:
    paths:
      - ".github/workflows/**"
      - "cmd/**"
      - "pkg/**"
      - "third_party/**"
      - "vendor/**"
      - "winpkg/**"
      - "go.*"
      - "Makefile"

env:
  BUILDKIT_PROGRESS: plain
  DOCKER_CLI_EXPERIMENTAL: enabled
  DDEV_DEBUG: true
  HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}


permissions:
  contents: read

jobs:
  build:
    name: Build DDEV executables
    runs-on: ubuntu-22.04
    env:
      AmplitudeAPIKey: ${{ secrets.AMPLITUDE_API_KEY_DEV }}
    steps:
      - uses: actions/checkout@v4
        with:
          # We need to get all branches and tags for git describe to work properly
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install build tools
        run: ./.github/workflows/linux-build-setup.sh

      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.21'

      # Find out info about how github is getting the hash
      - run: "git describe --tags --always --dirty"
      - run: "(git log --oneline | head -5) || true"

      - name: Build DDEV executables
        run: make CGO_ENABLED=0 BUILDARGS="" linux_amd64 linux_arm64 darwin_amd64 darwin_arm64 windows_amd64 windows_install

      - name: Generate artifacts
        run: ./.ci-scripts/generate_artifacts.sh ${{ github.workspace }}/artifacts

      - name: Upload macos-amd64 binary
        uses: actions/upload-artifact@v3
        with:
          name: ddev-macos-amd64
          path: .gotmp/bin/darwin_amd64/ddev

