name: Colima tests
on:
  pull_request:
    paths:
      - "go.*"
      - "pkg/**"
      - "cmd/**"
      - "Makefile"
      - "vendor/**"
      - ".github/workflows/**"
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate set "debug_enabled"'
        type: boolean
        required: false
        default: false
      testargs:
        description: Add specific test to run like -run TestEnvironmentVariables or -run "(TestDdevFullSite.*|Test.*Pull)"
        required: false
        default: ""

defaults:
  run:
    shell: bash

env:
  DDEV_DEBUG: true
  DDEV_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DDEV_SKIP_NODEJS_TEST: "true"
  HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read

jobs:
  tests:
    name: colima-${{ matrix.tests }}-no-bind-mounts=${{ matrix.no-bind-mounts }}

    strategy:
      matrix:
        webserver: [nginx-fpm]
        tests: [ test ]
        os: [ macos-13 ]
        no-bind-mounts: ['false']
      fail-fast: true

    runs-on: ${{ matrix.os }}

    env:
      DDEV_TEST_WEBSERVER_TYPE: ${{ matrix.webserver }}
      DDEV_NONINTERACTIVE: "true"
      DDEV_TEST_NO_BIND_MOUNTS: ${{ matrix.no-bind-mounts }}
      DDEV_TEST_USE_MUTAGEN: "true"
      GOTEST_SHORT: "true"

    steps:
      - uses: actions/checkout@v3

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y%V")" >> $GITHUB_OUTPUT
        shell: bash

      - name: DDEV test cache/restore
        uses: actions/cache/restore@v3
        with:
          path: ~/.ddev/testcache/tarballs
          key: ddev-test-cache-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ddev-test-cache-

      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Install Colima and deps (macOS)
        run: | 
          bash -x ./.github/workflows/macos-colima-setup.sh
          colima version

      - name: Build ddev
        run: | 
          make
          ln -s $PWD/.gotmp/bin/darwin_amd64/ddev /usr/local/bin/ddev

      - name: Basic ddev usage
        run: | 
          mkdir -p ~/workspace/d9 && cd ~/workspace/d9
          ddev config --project-type=drupal9 --docroot=web --create-docroot
          ddev debug download-images
          ddev poweroff
          docker builder prune -f -a || true
          docker buildx prune -f -a || true
          docker rm -f $(docker ps -aq) >/dev/null || true
          docker rmi -f $(docker images | awk '/[-]built/ { print $3 }')  >/dev/null || true

          # Pre-cache these so we don't see a mess in the later pull
          for image in schickling/beanstalkd:latest memcached:1.5 solr:8; do
            docker pull $image
          done >/dev/null

      - name: "show versions"
        run: "set -x && ddev version && docker version && docker-compose version && go version"

      - name: time make "${{ matrix.tests }}"
        run: |
          echo "DDEV_TEST_USE_MUTAGEN=${DDEV_TEST_USE_MUTAGEN}"
          echo "TESTARGS='${{ github.event.inputs.testargs }}'"
          echo "mkcert_caroot=$(grep mkcert_caroot ~/.ddev/global_config.yaml)"
          make "${{ matrix.tests }}" TESTARGS='${{ github.event.inputs.testargs }}'

      - name: Turn off /clean up
        run: |
          ddev poweroff
          colima stop

      - name: Clean up Homebrew
        continue-on-error: true
        run: |
          brew update
          brew autoremove
          brew cleanup
