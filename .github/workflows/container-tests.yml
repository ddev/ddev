name: Container tests
defaults:
  run:
    shell: bash

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    # Only run when something changes in the actual containers
    paths:
    - "containers/**"

env:
  BUILDKIT_PROGRESS: plain
  DOCKER_CLI_EXPERIMENTAL: enabled
  NO_LOAD: true

jobs:

  container-build-and-test:
    name: ${{ matrix.os }} - Test container ${{ matrix.containers }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]
        containers: [dbserver, webserver, others]

    steps:
      - uses: actions/checkout@v2

      - name: Install Docker and deps (Linux)
        if: matrix.os == 'ubuntu-20.04'
        run: ./.github/workflows/linux-setup.sh

      - uses: actions/setup-go@v2
        with:
          go-version: 1.*
          
      - name: Build and test container ${{ matrix.containers }}
        run: |
          docker version
          set -eu -o pipefail

          if [[ "${{ matrix.containers }}" == "dbserver" ]]; then
            pushd containers/ddev-dbserver
            echo "--- Test container dbserver"
            time make test DOCKER_ARGS="--no-cache"
            popd

          elif [[ "${{ matrix.containers }}" == "webserver" ]]; then
            pushd containers/ddev-webserver
            echo "--- Test container ddev-webserver"
            time make test DOCKER_ARGS="--no-cache"
            popd

          elif [[ "${{ matrix.containers }}" == "others" ]]; then
            for dir in ddev-router ddev-ssh-agent test-ssh-server
              do pushd containers/$dir
              echo "--- Test container $dir"
              time make test DOCKER_ARGS=--no-cache
              popd
            done

          fi
          set +eu
