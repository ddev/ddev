name: DDEV tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILDKIT_PROGRESS: plain
  DOCKER_CLI_EXPERIMENTAL: enabled

jobs:

  container-tests:
    name: ${{ matrix.os }} - Container tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04]

    steps:
      - uses: actions/checkout@v2

      - name: Install Docker and deps
        run: |
          if [[ "${{ matrix.os }}" == ubuntu* ]]; then
            ./.github/workflows/linux-setup.sh
          elif [[ "${{ matrix.os }}" == macos* ]]; then
            ./.github/workflows/macos-setup.sh
          else
            echo "Unsupported OS in matrix"
            exit 1
          fi      

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.3'

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Run container tests
        run: |
          if [[ "${{ matrix.os }}" == macos* ]]; then
            eval "$(docker-machine env default)"
          fi
          docker version
          set -eu -o pipefail
          for dir in containers/*/
              do pushd $dir
              echo "--- Build container $dir"
              time make container DOCKER_ARGS=--no-cache
              echo "--- Test container $dir"
              time make test
              popd
          done
          set +eu

  ddev-tests:
    # temporary, so we can focus on container tests first
    needs: container-tests
    name: ${{ matrix.os }} - make ${{ matrix.commands }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        #commands: [testcmd, testnotddevapp, testddevapp]
        commands: [testcmd]
        os: [ubuntu-18.04, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install Docker and deps
        run: |
          if [[ "${{ matrix.os }}" == ubuntu* ]]; then
            ./.github/workflows/linux-setup.sh
          elif [[ "${{ matrix.os }}" == macos* ]]; then
            ./.github/workflows/macos-setup.sh
          else
            echo "Unsupported OS in matrix"
            exit 1
          fi

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.3'

      - name: Run make ${{ matrix.commands }}
        run: |
          if [[ "${{ matrix.os }}" == macos* ]]; then
            eval "$(docker-machine env default)"
          fi
          docker version
          echo "Running tests..."
          make ${{ matrix.commands }}
