name: Push tagged image
defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Image to be pushed (base-webserver, ddev-webserver, etc)'
        required: true
        default: ddev-webserver
      tag:
        description: Tag for pushed image (v1.19.3 for example)'
        required: true
        default: ""
env:
  REGISTRY: docker.io
  DOCKER_ORG: drud
  # github.repository as <account>/<repo>
  IMAGE_TAG: "${DOCKER_ORG}/%${{ github.event.inputs.image }}:%${{ github.event.inputs.tag }}"

jobs:
  push-tagged-image:
    name: "push tagged image"
    runs-on: ubuntu-20.04

    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v2.7.0
      with:
        context: containers/%${{ github.event.inputs.image }}
        tags: $DOCKER_ORG/%${{ github.event.inputs.image }}:%${{ github.event.inputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        push: true

    # Sign the resulting Docker image digest except on PRs.
    # This will only write to the public Rekor transparency log when the Docker
    # repository is public to avoid leaking data.  If you would like to publish
    # transparency data even for private images, pass --force to cosign below.
    # https://github.com/sigstore/cosign
    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        COSIGN_EXPERIMENTAL: "true"
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
