language: go

go:
- 1.x

arch: arm64-graviton2
virt: vm
os: linux
dist: focal
group: edge

env:
  global:
    - BUILDKIT_PROGRESS=plain
    - GOTEST_SHORT=true

before_install:
  - ./.travis/linux_travis_arm64_setup.sh
  # Configure environment so changes are picked up when the Docker daemon is restarted after upgrading
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
  - export DOCKER_CLI_EXPERIMENTAL=enabled
  # Upgrade to Docker CE 19.03 for BuildKit support
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  # Show info to simplify debugging and create a builder
  - docker info
  - docker buildx create --name ddev-builder-multi --use  

# Group tests by directory to logically break up travis-CI build.
#
# Here's the bash if you need to update this. Be sure to maintain the 
# lines that are currently commented out (these cannot run in Travis)
#   cd pkg
#   find . -maxdepth 1 -type d | sed 's|./|    - env: TESTDIR=|' | sed 's/$//g'
#
jobs:
  include:
    - stage: test
      name: testpkg
      env: TESTDIR=nodeps
    - env: TESTDIR=appports
    - env: TESTDIR=fileutil
    - env: TESTDIR=version
    - env: TESTDIR=ddevhosts
    - env: TESTDIR=exec
    - env: TESTDIR=output
    - env: TESTDIR=globalconfig
    - env: TESTDIR=util
    - env: TESTDIR=testcommon
    - env: TESTDIR=appimport
    - env: TESTDIR=ddevapp
    - env: TESTDIR=netutil
    - env: TESTDIR=servicetest
    - env: TESTDIR=updatecheck
    - env: TESTDIR=archive
    - env: TESTDIR=dockerutil
    - name: make testcmd
      script: make testcmd
    - name: Linux container tests
      script: |
        set -eu -o pipefail
        pushd containers
        for dir in ddev-dbserver ddev-router ddev-ssh-agent ddev-webserver
          do pushd $dir
          echo "--- Build container $dir"
          time make container DOCKER_ARGS=--no-cache
          echo "--- Test container $dir"
          time make test
          popd
        done
        popd

script: make testpkg
