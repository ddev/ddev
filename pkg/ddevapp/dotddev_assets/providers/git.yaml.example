#ddev-generated
# Example git provider configuration.

# To use this configuration,

# 1. Create a git repository that contains a database dump and a files tarball. It can be private or public, but for most people they will be private.
# 2. Configure access to the repository so that it can be accessed from where you need it. For example, on gitpod, you'll need to enable access to GitHub or Gitlab. On a regular local dev environment, you'll need to be able to access github via https or ssh.
# 3. Update the environment_variables below to point to the git repository that contains your database dump and files.

environment_variables:
  project_url: https://github.com/rfay/ddev-d9-artifacts
  branch: main
  target: ~/tmp/ddev-d9-artifacts

auth_command:
  service: host
  command: |
    if [ ! -d ${target}/.git ] ; then
        git clone ${project_url} --branch=${branch} ${target}
    else
        cd ${target} && git fetch && git checkout origin/${branch}
    fi

db_pull_command:
  service: host
  command: |
    set -eu -o pipefail
    set -x
    cp ${target}/db.sql.gz .ddev/.downloads

files_pull_command:
  service: host
  command: |
    set -eu -o pipefail
    set -x
    tar -zxf ${target}/files.tgz -C .ddev/.downloads/files



# push is a dangerous command. If not absolutely needed it's better to delete these lines.
db_push_command:
  command: |
    set -x   # You can enable bash debugging output by uncommenting
    set -eu -o pipefail
    ls /var/www/html/.ddev >/dev/null # This just refreshes stale NFS if possible
    pushd /var/www/html/.ddev/.downloads >/dev/null;
    gzip -dc db.sql.gz | platform db:sql --project="${project_id}" --environment="${environment}"

# push is a dangerous command. If not absolutely needed it's better to delete these lines.
files_push_command:
  command: |
    set -x   # You can enable bash debugging output by uncommenting
    set -eu -o pipefail
    ls "${DDEV_FILES_DIR}" >/dev/null # This just refreshes stale NFS if possible
    platform mount:upload --yes --quiet --project="${project_id}" --environment="${environment}" --source="${DDEV_FILES_DIR}" --mount=web/sites/default/files
