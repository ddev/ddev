#!/usr/bin/env bash

## #ddev-generated
## Description: Run HeidiSQL against current db
## Usage: heidisql [database]
## Example: "ddev heidisql" or "ddev heidisql database2" to open a database named "database2".
## OSTypes: windows,wsl2,linux
## HostBinaryExists: /mnt/c/Program Files/HeidiSQL/heidisql.exe,C:\Program Files\HeidiSQL\Heidisql.exe,/usr/bin/heidisql,/usr/local/bin/heidisql
## DBTypes: mysql,mariadb,postgres

if [ "${DDEV_PROJECT_STATUS}" != "running" ] && [ -z "$no_recursion" ]; then
  echo "Project ${DDEV_PROJECT} is not running, starting it"
  ddev start || exit $?
  no_recursion=true ddev "$(basename "$0")" "$@"
  exit $?
fi

type="$(echo $DDEV_DATABASE | sed 's/:.*//')"
database="${1:-db}"
case $type in
  "mysql" | "mariadb")
    nettype=0
    ;;
  "postgres")
    nettype=8
    ;;
esac

# See: https://www.heidisql.com/help.php#commandline
arguments=(
  "--nettype=${nettype}"
  "--host=127.0.0.1"
  "--port=${DDEV_HOST_DB_PORT}"
  "--user=db"
  "--password=db"
  "--databases=${database}"
  "--description=ddev-${DDEV_PROJECT}"
)

if [ "$nettype" -eq 8 ] ; then
  if [ "$OSTYPE" = "win*" ] || [ "$OSTYPE" = "msys*" ] || ( [ "$OSTYPE" = "linux-gnu" ] && [ ! -x "/usr/local/bin/heidisql" ] && [ ! -x "/usr/bin/heidisql" ] ); then
    arguments+=("--library=libpq-17.dll")
  else
    arguments+=("--library=/lib/x86_64-linux-gnu/libpq.so.5")
  fi
fi


case $OSTYPE in
win* | msys*)
  start "" "C:\Program Files\HeidiSQL\heidisql.exe" "${arguments[@]}" &
  ;;

linux-gnu)
  BINARIES=(
    "/usr/local/bin/heidisql"
    "/usr/bin/heidisql"
    "/mnt/c/Program Files/HeidiSQL/heidisql.exe"
  )
  for binary in "${BINARIES[@]}"; do
    if [ -x "$binary" ]; then
      "$binary" "${arguments[@]}" &>/dev/null & disown
      break
    fi
  done
  ;;
esac
