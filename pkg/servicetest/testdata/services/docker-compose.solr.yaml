# DDev Apache Solr recipe file.
#
# To use this in your own project:
# 1. Copy this file to your project's ".ddev" directory.
# 2. Create the folder path ".ddev/solr/conf".
# 3. Copy the Solr configuration files for the appropriate plugin/module to
#    ".ddev/solr/conf". For example, using Drupal 8's Search API Solr module,
#    copy the files from its "solr-conf/7.x" directory into ".ddev/solr/conf"
#    so that a file exists with the path ".ddev/solr/conf/solrconfig.xml".
#
# To access Solr after it is installed:
# - The Solr admin interface will be accessible at:
#   http://<projectname>.ddev.site:8983/solr/
#   For example, if the project is named "myproject" the hostname will be:
#   http://myproject.ddev.site:8983/solr/
# - To access the Solr container from the web container use:
#   http://solr:8983/solr/
# - A Solr core is automatically created with the name "dev", i.e. it can be
#   accessed at the URL: http://solr:8983/solr/dev (inside web container)
#   or at http://myproject.ddev.site:8983/solr/dev (on the host)

version: '3.6'

services:
  solr:
    # Name of container using standard ddev convention
    container_name: ddev-${DDEV_SITENAME}-solr
    # The solr docker image is at https://hub.docker.com/_/solr/
    # and code at https://github.com/docker-solr/docker-solr
    # README: https://github.com/docker-solr/docker-solr/blob/master/README.md
    # It's almost impossible to work with it if you don't read the docs there
    image: solr:8
    restart: "no"
    # Solr is served from this port inside the container.
    ports:
      - 8983
    # These labels ensure this service is discoverable by ddev.
    labels:
      com.ddev.site-name: ${DDEV_SITENAME}
      com.ddev.approot: $DDEV_APPROOT
    environment:
      # This defines the host name the service should be accessible from. This
      # will be sitename.ddev.site.
      - VIRTUAL_HOST=$DDEV_HOSTNAME
      # This defines the port the service should be accessible from at
      # sitename.ddev.site.
      - HTTP_EXPOSE=8983
    volumes:
      # The .ddev/solr/conf directory is mounted into the solr container
      # in the conf directory where it belongs. This means you can
      # change config and restart any time and it should take effect.
      - ./solr/conf:/var/solr/data/dev/conf
      # solr core *data* is stored on the 'solrdata' docker volume
      - solrdata:/opt/solr/server/solr/mycores
      - ".:/mnt/ddev_config"
    entrypoint: [ docker-entrypoint.sh, solr-precreate, dev]
    external_links:
    - "ddev-router:${DDEV_SITENAME}.ddev.site"

  # This links the Solr service to the web service defined in the main
  # docker-compose.yml, allowing applications running in the web service to
  # access the Solr service at sitename.ddev.site:8983 and at solr:8983
  web:
    links:
      - solr:solr
volumes:
  # solrdata is a persistent Docker volume for solr data
  solrdata:
