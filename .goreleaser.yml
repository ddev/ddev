version: 2
##### BUILDS ######
builds:
- id: ddev
  main: ./cmd/ddev

  # Requires make  darwin_amd64 darwin_arm64 linux_amd64 linux_arm64 windows_amd64 windows_arm64 mkcert
  builder: prebuilt
  goos:
  - linux
  - windows
  - darwin
  goarch:
  - amd64
  - arm64
  goamd64:
  - v1
  prebuilt:
    path: .gotmp/bin/{{.Os}}_{{.Arch}}/ddev{{.Ext}}
  binary: ddev

- id: mkcert
  # requires make completions
  builder: prebuilt
  goos:
  - linux
  - darwin
  - windows
  goarch:
  - arm64
  - amd64
  goamd64:
  - v1
  prebuilt:
    path: .gotmp/bin/{{.Os}}_{{.Arch}}/mkcert{{.Ext}}
  binary: mkcert

- id: completions-tarball
  # requires make completions
  builder: prebuilt
  goos:
  - linux
  goarch:
  - arm64
  prebuilt:
    path: .gotmp/bin/completions.tar.gz
  binary: completions.tar.gz

- id: ddev_bash_completion.sh
  # requires make completions
  builder: prebuilt
  goos:
  - linux
  - darwin
  - windows
  goarch:
  - arm64
  - amd64
  goamd64:
  - v1
  prebuilt:
    path: .gotmp/bin/completions/ddev_bash_completion.sh
  binary: ddev_bash_completion.sh

- id: ddev_zsh_completion.sh
  # requires make completions
  builder: prebuilt
  goos:
  - linux
  - darwin
  - windows
  goarch:
  - arm64
  - amd64
  goamd64:
  - v1
  prebuilt:
    path: .gotmp/bin/completions/ddev_zsh_completion.sh
  binary: ddev_zsh_completion.sh

- id: ddev_fish_completion.sh
  # requires make completions
  builder: prebuilt
  goos:
  - linux
  - darwin
  - windows
  goarch:
  - arm64
  - amd64
  goamd64:
  - v1
  prebuilt:
    path: .gotmp/bin/completions/ddev_fish_completion.sh
  binary: ddev_fish_completion.sh

- id: ddev-windows-installer
  builder: prebuilt
  goos:
  - windows
  goarch:
  - amd64
  goamd64:
  - v1
  prebuilt:
    path: .gotmp/bin/windows_amd64/ddev_windows_installer.exe
  binary: ddev-windows-installer

###### Archives ######
archives:
- id: ddev
  builds:
  - ddev
  - mkcert
  - ddev_bash_completion.sh
  - ddev_zsh_completion.sh
  - ddev_fish_completion.sh
  format: tar.gz
  name_template: >-
    {{ .ProjectName }}_{{- if eq .Os "darwin" }}macos{{ else }}{{ .Os }}{{ end }}-{{- .Arch }}.v{{- .Version }}
  format_overrides:
  - goos: windows
    format: zip
  wrap_in_directory: false
  files:
  - LICENSE
  allow_different_binary_count: true

- id: completions-tarball
  builds:
  - completions-tarball
  format: binary
  name_template: ddev_shell_completion_scripts.v{{.Version}}.tar.gz

- id: ddev-windows-installer
  builds:
  - ddev-windows-installer
  format: binary
  name_template: "ddev_windows_installer.v{{.Version}}"

checksum:
  name_template: "checksums.txt"


#### RELEASE ####
release:
  prerelease: auto
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: ddev

brews:
- name: ddev
  ids:
  - ddev
  repository:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: homebrew-ddev
  description: DDEV
  directory: Formula
  homepage: https://github.com/ddev/ddev
  license: "Apache 2"
  # ddev brew will only be uploaded on non-prerelease
  skip_upload: auto
  dependencies:
  - name: mkcert
  custom_block: |
    head "https://github.com/ddev/ddev.git", branch: "master"
    depends_on "go" => :build
    depends_on "make" => :build
  install: |
    if build.head?
        os = OS.mac? ? "darwin" : "linux"
        arch = Hardware::CPU.arm? ? "arm64" : "amd64"
        system "mkdir", "-p", "#{bin}"
        system "make", "build", "completions"
        system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev", "#{bin}/ddev"
        bash_completion.install ".gotmp/bin/completions/ddev_bash_completion.sh" => "ddev"
        zsh_completion.install ".gotmp/bin/completions/ddev_zsh_completion.sh" => "_ddev"
        fish_completion.install ".gotmp/bin/completions/ddev_fish_completion.sh" => "ddev.fish"
    else
        bin.install "ddev"
        bash_completion.install "ddev_bash_completion.sh" => "ddev"
        zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
        fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
    end

  test: |
    system "#{bin}/ddev --version"

- name: ddev
  ids:
  - ddev
  repository:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: homebrew-ddev-edge
  description: DDEV
  directory: Formula
  homepage: https://github.com/ddev/ddev
  license: "Apache 2"
  # ddev-edge brew will always be uploaded
  skip_upload: "false"
  dependencies:
  - name: mkcert
  custom_block: |
    head "https://github.com/ddev/ddev.git", branch: "master"
    depends_on "go" => :build
    depends_on "make" => :build
  install: |
    if build.head?
        os = OS.mac? ? "darwin" : "linux"
        arch = Hardware::CPU.arm? ? "arm64" : "amd64"
        system "mkdir", "-p", "#{bin}"
        system "make", "build", "completions"
        system "cp", ".gotmp/bin/" + os + "_" + arch + "/ddev", "#{bin}/ddev"
        bash_completion.install ".gotmp/bin/completions/ddev_bash_completion.sh" => "ddev"
        zsh_completion.install ".gotmp/bin/completions/ddev_zsh_completion.sh" => "_ddev"
        fish_completion.install ".gotmp/bin/completions/ddev_fish_completion.sh" => "ddev.fish"
    else
        bin.install "ddev"
        bash_completion.install "ddev_bash_completion.sh" => "ddev"
        zsh_completion.install "ddev_zsh_completion.sh" => "_ddev"
        fish_completion.install "ddev_fish_completion.sh" => "ddev.fish"
    end

  test: |
    system "#{bin}/ddev --version"


nfpms:
- maintainer: Randy Fay
  license: "Apache 2"
  homepage: https://github.com/ddev/ddev
  description: |
    Open-source local web development tool
  builds:
  - ddev
  - mkcert
  formats:
  - deb
  - rpm
  contents:
  - src: .gotmp/bin/completions/ddev_bash_completion.sh
    dst: /usr/share/bash-completion/completions/ddev
    file_info:
      mode: 0644
  - src: .gotmp/bin/completions/ddev_fish_completion.sh
    dst: /usr/share/fish/completions/ddev.fish
    file_info:
      mode: 0644
  - src: .gotmp/bin/completions/ddev_zsh_completion.sh
    dst:  /usr/share/zsh/vendor-completions/_ddev
    file_info:
      mode: 0644
  suggests:
    - bash-completion
    - zsh-completions
  overrides:
    deb:
      dependencies:
      - libnss3-tools
      - xdg-utils
      replaces:
      - mkcert
    rpm:
      dependencies:
      - nss-tools
      - xdg-utils

snapshot:
  name_template: '{{ .Version }}-{{.ShortCommit}}'


aurs:
- name: "ddev"
  ids:
  - ddev
  homepage: "https://github.com/ddev/ddev"
  description: "DDEV: a local web development environment"
  maintainers:
  - 'Randy Fay <randy at randyfay.com>'
  license: "Apache 2"
  # main ddev repo will only be uploaded on non-prerelease
  skip_upload: auto
  private_key: '{{ .Env.AUR_SSH_PRIVATE_KEY }}'
  # AUR_EDGE_GIT_URL should be something like ssh://aur@aur.archlinux.org/ddev-bin.git or ssh://aur@aur.archlinux.org/rfay-test-ddev-bin.git
  git_url: '{{ .Env.AUR_STABLE_GIT_URL }}'
  depends:
  - docker
  - mkcert
  optdepends:
  - 'bash-completion: subcommand completion support'

  package: |-
    # bin
    install -Dm755 "./ddev" "${pkgdir}/usr/bin/ddev"
    install -Dm644 "./LICENSE" "${pkgdir}/usr/share/licenses/ddev/LICENSE"

    # completions
    mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
    mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
    mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
    install -Dm644 "./ddev_bash_completion.sh" "${pkgdir}/usr/share/bash-completion/completions/ddev"
    install -Dm644 "./ddev_zsh_completion.sh" "${pkgdir}/usr/share/zsh/site-functions/_ddev"
    install -Dm644 "./ddev_fish_completion.sh" "${pkgdir}/usr/share/fish/vendor_completions.d/ddev.fish"

  # Git author used to commit to the repository.
  # Defaults are shown below.
  commit_author:
    name: Randy Fay
    email: randy@randyfay.com

- name: "ddev-edge"
  ids:
  - ddev
  homepage: "https://github.com/ddev/ddev"
  description: "DDEV: a local web development environment (edge)"
  maintainers:
  - 'Randy Fay <randy at randyfay.com>'
  license: "Apache 2"
  # Always upload, even on prerelease
  skip_upload: "false"
  private_key: '{{ .Env.AUR_SSH_PRIVATE_KEY }}'
  # AUR_EDGE_GIT_URL should be something like ssh://aur@aur.archlinux.org/ddev-edge-bin.git or ssh://aur@aur.archlinux.org/rfay-test-ddev-edge-bin.git
  git_url: '{{ .Env.AUR_EDGE_GIT_URL }}'
  depends:
  - docker
  - mkcert
  optdepends:
  - 'bash-completion: subcommand completion support'

  package: |-
    # bin
    install -Dm755 "./ddev" "${pkgdir}/usr/bin/ddev"
    install -Dm644 "./LICENSE" "${pkgdir}/usr/share/licenses/ddev/LICENSE"

    # completions
    mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
    mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
    mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
    install -Dm644 "./ddev_bash_completion.sh" "${pkgdir}/usr/share/bash-completion/completions/ddev"
    install -Dm644 "./ddev_zsh_completion.sh" "${pkgdir}/usr/share/zsh/site-functions/_ddev"
    install -Dm644 "./ddev_fish_completion.sh" "${pkgdir}/usr/share/fish/vendor_completions.d/ddev.fish"

  # Git author used to commit to the repository.
  # Defaults are shown below.
  commit_author:
    name: Randy Fay
    email: randy@randyfay.com

furies:
- account: "{{ .Env.FURY_ACCOUNT }}"
  secret_name: "FURY_TOKEN"
  disable: '{{ ne .Prerelease "" }}'


dockerhub:

  #arch-aur-builder
  - images:
      - '{{ .Env.DOCKER_ORG }}/arch-aur-builder'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: Arch push helper (obsolete)
    full_description:
      from_file:
        path: ./.circleci/README.arch-aur-builder.md

  # ddev-dbserver
  - images:
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-5.5'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.0'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.1'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.2'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.3'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.4'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.5'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.6'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.7'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.8'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-10.11'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mariadb-11.4'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mysql-5.5'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mysql-5.6'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mysql-5.7'
      - '{{ .Env.DOCKER_ORG }}/ddev-dbserver-mysql-8.0'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: DDEV's ddev-dbserver image
    full_description:
      from_file:
        path: ./containers/ddev-dbserver/README.md


  #ddev-gitpod-base
  - images:
      - '{{ .Env.DOCKER_ORG }}/ddev-gitpod-base'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: Gitpod integration for DDEV
    full_description:
      from_file:
        path: ./.gitpod/images/README.md

  #ddev-nginx-proxy-router
  - images:
      - '{{ .Env.DOCKER_ORG }}/ddev-nginx-proxy-router'
      - '{{ .Env.DOCKER_ORG }}/ddev-router'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: DDEV's DEPRECATED ddev-nginx-proxy-router
    full_description:
      from_file:
        path: ./containers/ddev-nginx-proxy-router/README.md

  #ddev-php-base
  - images:
      - '{{ .Env.DOCKER_ORG }}/ddev-php-base'
      - '{{ .Env.DOCKER_ORG }}/ddev-php-prod'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: DDEV's ddev-php-base image, base image for ddev-webserver
    full_description:
      from_file:
        path: ./containers/ddev-php-base/README.md

  #ddev-ssh-agent
  - images:
      - '{{ .Env.DOCKER_ORG }}/ddev-ssh-agent'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: DDEV's ddev-ssh-agent image
    full_description:
      from_file:
        path: ./containers/ddev-ssh-agent/README.md

  #ddev-traefik-router
  - images:
      - '{{ .Env.DOCKER_ORG }}/ddev-traefik-router'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: DDEV's ddev-traefik-router, a wrapper on traefik
    full_description:
      from_file:
        path: ./containers/ddev-traefik-router/README.md

  #ddev-utilities
  - images:
      - '{{ .Env.DOCKER_ORG }}/ddev-utilities'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: Utility provider for jq, base64, etc
    full_description:
      from_url:
        url: https://github.com/ddev/ddev-utilities/raw/main/README.md

  #ddev-webserver
  - images:
      - '{{ .Env.DOCKER_ORG }}/ddev-webserver'
      - '{{ .Env.DOCKER_ORG }}/ddev-webserver-prod'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: DDEV's ddev-webserver image
    full_description:
      from_file:
        path: ./containers/ddev-webserver/README.md

  #mysql == mysql-arm64-images
  - images:
      - '{{ .Env.DOCKER_ORG }}/mysql'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: ARM64 base images for ddev-dbserver-mysql-8.0 and 5.7
    full_description:
      from_url:
        url: https://github.com/ddev/mysql-arm64-images/raw/main/README.md

  #mysql-client-build
  - images:
      - '{{ .Env.DOCKER_ORG }}/mysql-client-build'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: Utility builder for mysql client binaries
    full_description:
      from_url:
        url: https://github.com/ddev/mysql-client-build/raw/main/README.md

  #test-ssh-server
  - images:
      - '{{ .Env.DOCKER_ORG }}/test-ssh-server'
    username: '{{ .Env.DOCKERHUB_USERNAME }}'
    secret_name: "DOCKERHUB_TOKEN"
    description: DDEV's test-ssh-server image, used only for automated tests
    full_description:
      from_file:
        path: ./containers/test-ssh-server/README.md
