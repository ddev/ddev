#ddev-generated
# Example Pantheon.io provider configuration.

# To use this configuration,
# 2. Make sure your public ssh key is configured in Pantheon (Account->SSH Keys)
# 1. Create a Pantheon.io machine token (Account->Machine Tokens).
# 2. Add add an entry to web_environment in ~/.ddev/global_config.yaml with the token:
# web_environment:
# - TERMINUS_MACHINE_TOKEN=xxxxxxxx
# 3. Copy pantheon.yaml.example to pantheon.yaml.
# 4. `ddev auth ssh`
# 5. Update project_id and environment_name. project_id can usually be the project name.
# 6. `ddev restart`
# 7. Use `ddev pull pantheon` to pull the project database and files.

# Debugging: Use `ddev exec terminus auth:whoami` to see what terminus knows about
# `ddev exec terminus site:list` will show available sites

environment_variables:
  project_id: d8ddevpantheon
  environment_name: dev

auth_command:
  command: |
    ssh-add -l >/dev/null || ( echo "Please 'ddev auth ssh' before running this command." && exit 1 )
    if [ -z "${TERMINUS_MACHINE_TOKEN:-}" ]; then echo "Please make sure you have set TERMINUS_MACHINE_TOKEN in ~/.ddev/global_config.yaml" && exit 1; fi
    terminus auth:login --machine-token="${TERMINUS_MACHINE_TOKEN}" >/dev/null 2>&1
    terminus aliases 2>/dev/null

db_pull_command:
  command: |
    drush @pantheon.${project_id}.${environment_name} sql-dump --gzip >/var/www/html/.ddev/.downloads/db.sql.gz

files_pull_command:
  command: |
    ls /var/www/html/.ddev >/dev/null # This just refreshes stale NFS if possible
    drush rsync -y @d8ddevpantheon.dev:%files/ @self:%files/

db_push_command:
  command: true

files_push_command:
  command: true
