#!/bin/bash
set -eu -o pipefail
set -x

if [ ! -z "${USE_LETSENCRYPT:-}" ]; then
  hostnames="{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}{{ trim $host }} {{ end }}"

  for host in ${hostnames}; do
    # certbot challenge can fail for many reasons, but don't let it break everything
    certbot --nginx certonly -n --domain "${host}" --agree-tos --email "${LETSENCRYPT_EMAIL:-}" || true
  done
fi

# mkcert is fully capable of generating all needed names in a single container.
mkcert -cert-file /etc/nginx/certs/master.crt -key-file /etc/nginx/certs/master.key {{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }} {{ trim $host }} {{ end }} 127.0.0.1 localhost "*.ddev.local" "*.ddev.site"

# This is not recursive, as it executes completely different instructions.
# It's important for the nginx config creation and the nginx reload to take place after all cert
# activities are completed.
docker-gen -only-exposed -notify-output -notify "sleep 1 && nginx -s reload" /app/nginx.tmpl /etc/nginx/conf.d/default.conf
