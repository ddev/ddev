version: 2
jobs:
  golang_build:
    machine:
      image: circleci/classic:201711-01
    working_directory: ~/ddev
    environment:
      DRUD_NONINTERACTIVE: "true"
    steps:
    - checkout
    - run:
        command: ./.circleci/circle_vm_setup.sh
        name: NORMAL Circle VM setup - tools, docker, golang
        # Now build using the regular ddev-only technique - this results in a fully clean set of executables.
    - run:
        command: |
          make -s clean linux darwin windows_install
        name: Build the ddev executables
    - persist_to_workspace:
        root: ~/
        paths: ddev

  golang_test_nginx_fpm:
    machine:
      image: circleci/classic:201711-01
    working_directory: ~/ddev
    environment:
      DDEV_TEST_WEBSERVER_TYPE: nginx-fpm
      DRUD_NONINTERACTIVE: "true"
    steps:
    - attach_workspace:
        at: ~/
    # Run the built-in ddev tests with the executables just built.
    - run:
        command: ./.circleci/circle_vm_setup.sh
        name: Circle VM setup - tools, docker, golang
        # Now build using the regular ddev-only technique - this results in a fully clean set of executables.
    - run:
        command: make -s test
        name: ddev tests
        no_output_timeout: "120m"
    - store_test_results:
        path: /tmp/testresults

  golang_test_apache_fpm:
    machine:
      image: circleci/classic:201711-01
    working_directory: ~/ddev
    environment:
      DDEV_TEST_WEBSERVER_TYPE: apache-fpm
      # Experiment with only testing TYPO3 with the apache run.
      GOTEST_SHORT: 5
      DRUD_NONINTERACTIVE: "true"
    steps:
    - attach_workspace:
        at: ~/
    - run:
        command: ./.circleci/circle_vm_setup.sh
        name: Circle VM setup - tools, docker, golang
        # Now build using the regular ddev-only technique - this results in a fully clean set of executables.
    # Run the built-in ddev tests with the executables just built.
    - run:
        command: make -s test
        name: ddev tests
        no_output_timeout: "120m"
    - store_test_results:
        path: /tmp/testresults

  golang_test_apache_cgi:
    machine:
      image: circleci/classic:201711-01
    working_directory: ~/ddev
    environment:
      DDEV_TEST_WEBSERVER_TYPE: apache-cgi
      # Experiment with only testing TYPO3 with the apache run.
      GOTEST_SHORT: 5
      DRUD_NONINTERACTIVE: "true"
    steps:
    - attach_workspace:
        at: ~/
    - run:
        command: ./.circleci/circle_vm_setup.sh
        name: Circle VM setup - tools, docker, golang
    - run:
        command: make -s test
        name: ddev tests
        no_output_timeout: "120m"
    - store_test_results:
        path: /tmp/testresults

  staticrequired:
    machine:
      image: circleci/classic:201711-01
    working_directory: ~/ddev
    environment:
      ARTIFACTS: /artifacts
    steps:
    - attach_workspace:
        at: ~/
    # Run the built-in ddev tests with the executables just built.
    - run:
        command: ./.circleci/circle_vm_setup.sh
        name: Circle VM setup - tools, docker, golang
    - run:
        command: make staticrequired
        name: staticrequired

  artifacts:
    machine:
      image: circleci/classic:201711-01
    working_directory: ~/ddev
    environment:
      ARTIFACTS: /artifacts
    steps:
    - attach_workspace:
        at: ~/
    - run:
        command: ./.circleci/generate_artifacts.sh $ARTIFACTS
        name: tar/zip up artifacts and make hashes
        no_output_timeout: "40m"

    - store_artifacts:
        path: /artifacts
        name: Artifact storage

  # 'tag_build' is used to build a tag for release.
  tag_build:
    machine:
      image: circleci/classic:201711-01
    working_directory: ~/ddev
    environment:
      DRUD_DEBUG: "true"
      ARTIFACTS: /artifacts
    steps:
      - checkout

      - run:
          command: ./.circleci/circle_vm_setup.sh
          name: TAG BUILD Circle VM setup - tools, docker, golang

      # Now build using the regular ddev-only technique - this results in a fully clean set of executables.
      - run:
          command: make -s clean linux darwin windows_install
          name: Build the ddev executables

      - run:
          command: .gotmp/bin/ddev version
          name: ddev version information

      # We only build the xz version of the docker images on tag build.
      - run:
          command: ./.circleci/generate_artifacts.sh $ARTIFACTS TRUE
          name: tar/zip up artifacts and make hashes
          no_output_timeout: "40m"

      - store_artifacts:
          path: /artifacts
          name: Artifact storage

workflows:
  version: 2
  normal_build_and_test:
    jobs:
    - golang_build
    - golang_test_nginx_fpm:
        requires:
        - golang_build
    - golang_test_apache_fpm:
        requires:
        - golang_build
    - golang_test_apache_cgi:
        requires:
        - golang_build
    - staticrequired:
        requires:
        - golang_build
    - artifacts:
        requires:
        - golang_build

  nightly_build:
    triggers:
      - schedule:
          cron: "0 3 * * *"
          filters:
            branches:
              only:
                - master
                - "pull/[0-9]+"
    jobs:
    - golang_build
    - golang_test_nginx_fpm:
        requires:
        - golang_build
    - artifacts:
        requires:
        - golang_build

  tag_build:
    jobs:
      - tag_build:
          filters:
            tags:
              only:
                - "/.*/"
            branches:
              ignore: /.*/
